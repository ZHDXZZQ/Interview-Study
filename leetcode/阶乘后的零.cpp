// 思路： 数学思维，时间Ologn，空间O1
// 1. n的阶乘即n x n-1 x n-2 x …… x 5 x 4 x 3 x 2 x 1
// 2. 根据常识可知，结尾0的个数取决于多少个10相乘，而10只能由2x5得到
// 3. 因此，只需要寻找1-n中质因数5的个数即可，因为2的个数一定比5多，5的个数即代表了10的个数
// 4. 举例，5 x 4 x 3 x 2 x 1中，有1个5，3个2，结果为120，有1个0
// 5. 类推到25 x 24 x …… x 2 x 1，会发现2更多，5只有5、10、15、20、25贡献，而25贡献了2个5
// 6. 同时会发现50也贡献了2个5，75也贡献了2个5，100贡献了2个5，125贡献了3个5
// 7. 因此得到结论5的n次可以贡献n个5，那么就对n除5即可，如1-25乘起来，贡献了5个5+1个5，只需要25即可计算得到，即25/5=5，5/5=1，1+5=6。所以25的阶乘中，结尾有6个0

class Solution {
public:
    int trailingZeroes(int n) {
        int res = 0;
        while (n) { //对n除5下去整，找到能贡献的所有的5的个数
            res += (n / 5); //如果n在25以下，则最多贡献n/5个5，否则就接着除，直到n为0
            n /= 5;
        }
        return res;
    }
};